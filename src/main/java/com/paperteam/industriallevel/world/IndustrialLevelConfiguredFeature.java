package com.paperteam.industriallevel.world;

import com.paperteam.industriallevel.IndustrialLevel;
import com.paperteam.industriallevel.config.IndustrialLevelConfigBuilder;
import com.paperteam.industriallevel.setup.Registration;
import com.paperteam.industriallevel.world.feature.CustomOreFeature;
import net.minecraft.core.Registry;
import net.minecraft.data.BuiltinRegistries;
import net.minecraft.data.worldgen.features.OreFeatures;
import net.minecraft.resources.ResourceLocation;
import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
import net.minecraft.world.level.levelgen.feature.Feature;
import net.minecraft.world.level.levelgen.feature.configurations.OreConfiguration;
import net.minecraftforge.fml.common.Mod;

import java.util.List;

@Mod.EventBusSubscriber
public class IndustrialLevelConfiguredFeature {
    // Create target block lists
    public static List<OreConfiguration.TargetBlockState> TITANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_TITANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_TITANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_TITANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> CHLOROPHYTE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_CHLOROPHYTE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_CHLOROPHYTE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_CHLOROPHYTE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> BRONZE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_BRONZE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_BRONZE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_BRONZE_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> LEAD_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_LEAD_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_LEAD_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_LEAD_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NICKEL_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_NICKEL_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_NICKEL_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_NICKEL_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> OSMIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_OSMIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_OSMIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_OSMIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> PLATINUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_PLATINUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_PLATINUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_PLATINUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> SILVER_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_SILVER_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_SILVER_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_SILVER_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> TIN_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_TIN_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_TIN_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_TIN_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> URANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_URANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_URANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_URANIUM_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> ZINC_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> DEEPSLATE_ZINC_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> NETHER_ZINC_ORE_TARGET_LIST;
    public static List<OreConfiguration.TargetBlockState> END_ZINC_ORE_TARGET_LIST;

    // Declare configured feature variables
    public static ConfiguredFeature<?,?> TITANIUM_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_TITANIUM_ORE;
    public static ConfiguredFeature<?,?> NETHER_TITANIUM_ORE;
    public static ConfiguredFeature<?,?> END_TITANIUM_ORE;
    public static ConfiguredFeature<?,?> CHLOROPHYTE_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_CHLOROPHYTE_ORE;
    public static ConfiguredFeature<?,?> NETHER_CHLOROPHYTE_ORE;
    public static ConfiguredFeature<?,?> END_CHLOROPHYTE_ORE;
    public static ConfiguredFeature<?,?> BRONZE_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_BRONZE_ORE;
    public static ConfiguredFeature<?,?> NETHER_BRONZE_ORE;
    public static ConfiguredFeature<?,?> END_BRONZE_ORE;
    public static ConfiguredFeature<?,?> LEAD_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_LEAD_ORE;
    public static ConfiguredFeature<?,?> NETHER_LEAD_ORE;
    public static ConfiguredFeature<?,?> END_LEAD_ORE;
    public static ConfiguredFeature<?,?> NICKEL_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_NICKEL_ORE;
    public static ConfiguredFeature<?,?> NETHER_NICKEL_ORE;
    public static ConfiguredFeature<?,?> END_NICKEL_ORE;
    public static ConfiguredFeature<?,?> OSMIUM_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_OSMIUM_ORE;
    public static ConfiguredFeature<?,?> NETHER_OSMIUM_ORE;
    public static ConfiguredFeature<?,?> END_OSMIUM_ORE;
    public static ConfiguredFeature<?,?> PLATINUM_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_PLATINUM_ORE;
    public static ConfiguredFeature<?,?> NETHER_PLATINUM_ORE;
    public static ConfiguredFeature<?,?> END_PLATINUM_ORE;
    public static ConfiguredFeature<?,?> SILVER_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_SILVER_ORE;
    public static ConfiguredFeature<?,?> NETHER_SILVER_ORE;
    public static ConfiguredFeature<?,?> END_SILVER_ORE;
    public static ConfiguredFeature<?,?> TIN_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_TIN_ORE;
    public static ConfiguredFeature<?,?> NETHER_TIN_ORE;
    public static ConfiguredFeature<?,?> END_TIN_ORE;
    public static ConfiguredFeature<?,?> URANIUM_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_URANIUM_ORE;
    public static ConfiguredFeature<?,?> NETHER_URANIUM_ORE;
    public static ConfiguredFeature<?,?> END_URANIUM_ORE;
    public static ConfiguredFeature<?,?> ZINC_ORE;
    public static ConfiguredFeature<?,?> DEEPSLATE_ZINC_ORE;
    public static ConfiguredFeature<?,?> NETHER_ZINC_ORE;
    public static ConfiguredFeature<?,?> END_ZINC_ORE;


    public static void registerConfiguredFeatures() {
        // Assemble target block lists
        TITANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.TITANIUM_ORE.get().defaultBlockState()));
        DEEPSLATE_TITANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_TITANIUM_ORE.get().defaultBlockState()));
        NETHER_TITANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_TITANIUM_ORE.get().defaultBlockState()));
        END_TITANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_TITANIUM_ORE.get().defaultBlockState()));
        CHLOROPHYTE_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.CHLOROPHYTE_ORE.get().defaultBlockState()));
        DEEPSLATE_CHLOROPHYTE_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_CHLOROPHYTE_ORE.get().defaultBlockState()));
        NETHER_CHLOROPHYTE_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_CHLOROPHYTE_ORE.get().defaultBlockState()));
        END_CHLOROPHYTE_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_CHLOROPHYTE_ORE.get().defaultBlockState()));
        BRONZE_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.BRONZE_ORE.get().defaultBlockState()));
        DEEPSLATE_BRONZE_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_BRONZE_ORE.get().defaultBlockState()));
        NETHER_BRONZE_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_BRONZE_ORE.get().defaultBlockState()));
        END_BRONZE_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_BRONZE_ORE.get().defaultBlockState()));
        LEAD_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.LEAD_ORE.get().defaultBlockState()));
        DEEPSLATE_LEAD_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_LEAD_ORE.get().defaultBlockState()));
        NETHER_LEAD_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_LEAD_ORE.get().defaultBlockState()));
        END_LEAD_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_LEAD_ORE.get().defaultBlockState()));
        NICKEL_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.NICKEL_ORE.get().defaultBlockState()));
        DEEPSLATE_NICKEL_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_NICKEL_ORE.get().defaultBlockState()));
        NETHER_NICKEL_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_NICKEL_ORE.get().defaultBlockState()));
        END_NICKEL_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_NICKEL_ORE.get().defaultBlockState()));
        OSMIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.OSMIUM_ORE.get().defaultBlockState()));
        DEEPSLATE_OSMIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_OSMIUM_ORE.get().defaultBlockState()));
        NETHER_OSMIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_OSMIUM_ORE.get().defaultBlockState()));
        END_OSMIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_OSMIUM_ORE.get().defaultBlockState()));
        PLATINUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.PLATINUM_ORE.get().defaultBlockState()));
        DEEPSLATE_PLATINUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_PLATINUM_ORE.get().defaultBlockState()));
        NETHER_PLATINUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_PLATINUM_ORE.get().defaultBlockState()));
        END_PLATINUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_PLATINUM_ORE.get().defaultBlockState()));
        SILVER_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.SILVER_ORE.get().defaultBlockState()));
        DEEPSLATE_SILVER_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_SILVER_ORE.get().defaultBlockState()));
        NETHER_SILVER_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_SILVER_ORE.get().defaultBlockState()));
        END_SILVER_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_SILVER_ORE.get().defaultBlockState()));
        TIN_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.TIN_ORE.get().defaultBlockState()));
        DEEPSLATE_TIN_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_TIN_ORE.get().defaultBlockState()));
        NETHER_TIN_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_TIN_ORE.get().defaultBlockState()));
        END_TIN_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_TIN_ORE.get().defaultBlockState()));
        URANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.URANIUM_ORE.get().defaultBlockState()));
        DEEPSLATE_URANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_URANIUM_ORE.get().defaultBlockState()));
        NETHER_URANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_URANIUM_ORE.get().defaultBlockState()));
        END_URANIUM_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_URANIUM_ORE.get().defaultBlockState()));
        ZINC_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.STONE_ORE_REPLACEABLES, Registration.ZINC_ORE.get().defaultBlockState()));
        DEEPSLATE_ZINC_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.DEEPSLATE_ORE_REPLACEABLES, Registration.DEEPSLATE_ZINC_ORE.get().defaultBlockState()));
        NETHER_ZINC_ORE_TARGET_LIST = List.of(OreConfiguration.target(OreFeatures.NETHER_ORE_REPLACEABLES, Registration.NETHER_ZINC_ORE.get().defaultBlockState()));
        END_ZINC_ORE_TARGET_LIST = List.of(OreConfiguration.target(CustomOreFeature.FillerBlockType.END_STONE, Registration.END_ZINC_ORE.get().defaultBlockState()));

        // Add target blocks to configured features
        TITANIUM_ORE = Feature.ORE.configured(new OreConfiguration(TITANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.TITANIUM_ORE_SIZE.get()));
        DEEPSLATE_TITANIUM_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_TITANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_TITANIUM_ORE_SIZE.get()));
        NETHER_TITANIUM_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_TITANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_TITANIUM_ORE_SIZE.get()));
        END_TITANIUM_ORE = Feature.ORE.configured(new OreConfiguration(END_TITANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_TITANIUM_ORE_SIZE.get()));
        CHLOROPHYTE_ORE = Feature.ORE.configured(new OreConfiguration(CHLOROPHYTE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.CHLOROPHYTE_ORE_SIZE.get()));
        DEEPSLATE_CHLOROPHYTE_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_CHLOROPHYTE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_CHLOROPHYTE_ORE_SIZE.get()));
        NETHER_CHLOROPHYTE_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_CHLOROPHYTE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_CHLOROPHYTE_ORE_SIZE.get()));
        END_CHLOROPHYTE_ORE = Feature.ORE.configured(new OreConfiguration(END_CHLOROPHYTE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_CHLOROPHYTE_ORE_SIZE.get()));
        BRONZE_ORE = Feature.ORE.configured(new OreConfiguration(BRONZE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.BRONZE_ORE_SIZE.get()));
        DEEPSLATE_BRONZE_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_BRONZE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_BRONZE_ORE_SIZE.get()));
        NETHER_BRONZE_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_BRONZE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_BRONZE_ORE_SIZE.get()));
        END_BRONZE_ORE = Feature.ORE.configured(new OreConfiguration(END_BRONZE_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_BRONZE_ORE_SIZE.get()));
        LEAD_ORE = Feature.ORE.configured(new OreConfiguration(LEAD_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.LEAD_ORE_SIZE.get()));
        DEEPSLATE_LEAD_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_LEAD_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_LEAD_ORE_SIZE.get()));
        NETHER_LEAD_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_LEAD_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_LEAD_ORE_SIZE.get()));
        END_LEAD_ORE = Feature.ORE.configured(new OreConfiguration(END_LEAD_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_LEAD_ORE_SIZE.get()));
        NICKEL_ORE = Feature.ORE.configured(new OreConfiguration(NICKEL_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NICKEL_ORE_SIZE.get()));
        DEEPSLATE_NICKEL_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_NICKEL_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_NICKEL_ORE_SIZE.get()));
        NETHER_NICKEL_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_NICKEL_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_NICKEL_ORE_SIZE.get()));
        END_NICKEL_ORE = Feature.ORE.configured(new OreConfiguration(END_NICKEL_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_NICKEL_ORE_SIZE.get()));
        OSMIUM_ORE = Feature.ORE.configured(new OreConfiguration(OSMIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.OSMIUM_ORE_SIZE.get()));
        DEEPSLATE_OSMIUM_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_OSMIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_OSMIUM_ORE_SIZE.get()));
        NETHER_OSMIUM_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_OSMIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_OSMIUM_ORE_SIZE.get()));
        END_OSMIUM_ORE = Feature.ORE.configured(new OreConfiguration(END_OSMIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_OSMIUM_ORE_SIZE.get()));
        PLATINUM_ORE = Feature.ORE.configured(new OreConfiguration(PLATINUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.PLATINUM_ORE_SIZE.get()));
        DEEPSLATE_PLATINUM_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_PLATINUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_PLATINUM_ORE_SIZE.get()));
        NETHER_PLATINUM_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_PLATINUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_PLATINUM_ORE_SIZE.get()));
        END_PLATINUM_ORE = Feature.ORE.configured(new OreConfiguration(END_PLATINUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_PLATINUM_ORE_SIZE.get()));
        SILVER_ORE = Feature.ORE.configured(new OreConfiguration(SILVER_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.SILVER_ORE_SIZE.get()));
        DEEPSLATE_SILVER_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_SILVER_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_SILVER_ORE_SIZE.get()));
        NETHER_SILVER_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_SILVER_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_SILVER_ORE_SIZE.get()));
        END_SILVER_ORE = Feature.ORE.configured(new OreConfiguration(END_SILVER_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_SILVER_ORE_SIZE.get()));
        TIN_ORE = Feature.ORE.configured(new OreConfiguration(TIN_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.TIN_ORE_SIZE.get()));
        DEEPSLATE_TIN_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_TIN_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_TIN_ORE_SIZE.get()));
        NETHER_TIN_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_TIN_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_TIN_ORE_SIZE.get()));
        END_TIN_ORE = Feature.ORE.configured(new OreConfiguration(END_TIN_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_TIN_ORE_SIZE.get()));
        URANIUM_ORE = Feature.ORE.configured(new OreConfiguration(URANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.URANIUM_ORE_SIZE.get()));
        DEEPSLATE_URANIUM_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_URANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_URANIUM_ORE_SIZE.get()));
        NETHER_URANIUM_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_URANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_URANIUM_ORE_SIZE.get()));
        END_URANIUM_ORE = Feature.ORE.configured(new OreConfiguration(END_URANIUM_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_URANIUM_ORE_SIZE.get()));
        ZINC_ORE = Feature.ORE.configured(new OreConfiguration(ZINC_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.ZINC_ORE_SIZE.get()));
        DEEPSLATE_ZINC_ORE = Feature.ORE.configured(new OreConfiguration(DEEPSLATE_ZINC_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.DEEPSLATE_ZINC_ORE_SIZE.get()));
        NETHER_ZINC_ORE = Feature.ORE.configured(new OreConfiguration(NETHER_ZINC_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.NETHER_ZINC_ORE_SIZE.get()));
        END_ZINC_ORE = Feature.ORE.configured(new OreConfiguration(END_ZINC_ORE_TARGET_LIST, IndustrialLevelConfigBuilder.END_ZINC_ORE_SIZE.get()));

        // Register the configured features
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "titanium_ore"), TITANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_titanium_ore"), DEEPSLATE_TITANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_titanium_ore"), NETHER_TITANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_titanium_ore"), END_TITANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "chlorophyte_ore"), CHLOROPHYTE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_chlorophyte_ore"), DEEPSLATE_CHLOROPHYTE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_chlorophyte_ore"), NETHER_CHLOROPHYTE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_chlorophyte_ore"), END_CHLOROPHYTE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "bronze_ore"), BRONZE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_bronze_ore"), DEEPSLATE_BRONZE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_bronze_ore"), NETHER_BRONZE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_bronze_ore"), END_BRONZE_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "lead_ore"), LEAD_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_lead_ore"), DEEPSLATE_LEAD_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_lead_ore"), NETHER_LEAD_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_lead_ore"), END_LEAD_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nickel_ore"), NICKEL_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_nickel_ore"), DEEPSLATE_NICKEL_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_nickel_ore"), NETHER_NICKEL_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_nickel_ore"), END_NICKEL_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "osmium_ore"), OSMIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_osmium_ore"), DEEPSLATE_OSMIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_osmium_ore"), NETHER_OSMIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_osmium_ore"), END_OSMIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "platinum_ore"), PLATINUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_platinum_ore"), DEEPSLATE_PLATINUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_platinum_ore"), NETHER_PLATINUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_platinum_ore"), END_PLATINUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "silver_ore"), SILVER_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_silver_ore"), DEEPSLATE_SILVER_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_silver_ore"), NETHER_SILVER_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_silver_ore"), END_SILVER_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "tin_ore"), TIN_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_tin_ore"), DEEPSLATE_TIN_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_tin_ore"), NETHER_TIN_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_tin_ore"), END_TIN_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "uranium_ore"), URANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_uranium_ore"), DEEPSLATE_URANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_uranium_ore"), NETHER_URANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_uranium_ore"), END_URANIUM_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "zinc_ore"), ZINC_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "deepslate_zinc_ore"), DEEPSLATE_ZINC_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "nether_zinc_ore"), NETHER_ZINC_ORE);
        Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, new ResourceLocation(IndustrialLevel.ModId, "end_zinc_ore"), END_ZINC_ORE);
    }
}
